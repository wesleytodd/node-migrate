#!/usr/bin/env node
'use strict'

var program = require('commander')
var slug = require('slug')
var moment = require('moment')
var mkdirp = require('mkdirp')
var path = require('path')
var fs = require('fs')
var log = require('../lib/log')
var pkg = require('../package.json')

program
  .version(pkg.version)
  .option('-c, --chdir [dir]', 'Change the working directory', process.cwd())
  .option('-d, --date-format [format]', 'Set a date format to use', 'x')
  .option('-t, --template-file [filePath]', 'Set path to template file to use for new migrations', path.join(__dirname, '..', 'lib', 'template.js'))
  .option('-e, --extention [extention]', 'Use the given extention to create the file', '.js')
  .arguments('[name]')
  .action(create)
  .parse(process.argv)

function create (name) {
  // Change the working dir
  process.chdir(program.chdir)

  // Load template file
  var template = fs.readFileSync(program.templateFile)

  // Create date string
  var now = moment().format(program.dateFormat)

  // Create file path
  var p = path.join(process.cwd(), 'migrations', slug(now + (name ? '-' + name : '')) + program.extention)

  log('create', p)
  mkdirp.sync(path.dirname(p))
  fs.writeFileSync(p, template)
}
